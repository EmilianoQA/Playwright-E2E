# .github/workflows/playwright-e2e.yml
name: Playwright E2E Tests

on:
  # EjecuciÃ³n manual desde GitHub
  workflow_dispatch:
  
  # TambiÃ©n en push a main (opcional)
  push:
    branches: [ main ]

jobs:
  e2e-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Node.js dependencies
      run: npm install
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: playwright install --with-deps chromium
    
    - name: Setup Python virtual environment
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install -r requirements.txt
    
    - name: Install backend dependencies
      run: |
        cd redux-athena-bank/backend
        npm install
    
    - name: Install frontend dependencies
      run: |
        cd redux-athena-bank/frontend
        npm install
    
    - name: Create .env file
      run: |
        echo "BASE_URL=http://localhost:3000" >> .env
        echo "API_BASE_URL=http://localhost:6007" >> .env
        echo "EMAIL_VALIDO=test@example.com" >> .env
        echo "PASSWORD_VALIDO=testpassword123" >> .env
    
    - name: Start MongoDB (if needed)
      run: |
        sudo systemctl start mongod || echo "MongoDB not available"
    
    - name: Start application and run tests
      run: npm run e2e:ci
    
    - name: Generate Allure report
      if: always()
      run: |
        npm install -g allure-commandline
        allure generate allure-results -o allure-report --clean
    
    - name: Upload Allure report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
    
    - name: Upload Allure results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30
    
    - name: Upload screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: screenshots
        path: screenshots/
        retention-days: 30
    
    - name: Upload traces
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: traces
        path: trace.zip
        retention-days: 30
    
    - name: Comment PR with Allure report
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ§ª Tests completed! Check the Allure report in the artifacts.'
          })