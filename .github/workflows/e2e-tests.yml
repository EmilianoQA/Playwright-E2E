name: E2E Tests with Allure Reports

# Cuándo ejecutar: en push, pull requests Y manualmente
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Trabajos a ejecutar
jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Descargar código del repositorio
    - name: Checkout code
      uses: actions/checkout@v4
    
    # 2. Configurar Python
    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
    
    # 3. Instalar dependencias de Python
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # 4. Setup Node.js for Redux Athena Bank
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    # 5. Install and start MongoDB
    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.11.0
      with:
        mongodb-version: '6.0'
    
    # 6. Setup Redux Athena Bank Backend
    - name: Install backend dependencies
      run: |
        ls -la
        ls -la redux-athena-bank/
        cd redux-athena-bank/backend
        npm install
    
    - name: Create backend .env file
      run: |
        cd redux-athena-bank/backend
        echo "JWT_SECRET=mi_secreto_super_seguro_123" > .env
        echo "PORT=6007" >> .env
        echo "MONGO_URI=mongodb://localhost:27017/redux-athena-bank" >> .env
    
    - name: Start backend
      run: |
        cd redux-athena-bank/backend
        npm run dev &
        sleep 5
    
    # 7. Setup Redux Athena Bank Frontend
    - name: Install frontend dependencies
      run: |
        cd redux-athena-bank/frontend
        npm install
    
    - name: Start frontend
      run: |
        cd redux-athena-bank/frontend
        npm run dev &
        sleep 10
    
    # 8. Instalar navegadores de Playwright
    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium
        python -m playwright install-deps
    
    # 9. Crear archivo .env para tests
    - name: Create .env file
      run: |
        echo "BASE_URL=http://localhost:3000" > .env
        echo "API_BASE_URL=http://localhost:6007" >> .env
        echo "EMAIL_VALIDO=test@example.com" >> .env
        echo "PASSWORD_VALIDO=password123" >> .env
        echo "EMAIL_INCORRECTO=wrong@example.com" >> .env
        echo "PASSWORD_INCORRECTO=wrongpass" >> .env
    
    # 10. Ejecutar todos los tests E2E
    - name: Run E2E tests
      run: pytest -v
      env:
        PLAYWRIGHT_BROWSERS_PATH: /ms-playwright
    
    # 11. Generar reporte de Allure
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
    
    # 12. Publicar reporte en GitHub Pages
    - name: Deploy to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-history
